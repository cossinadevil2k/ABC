/*
	Convert XML to JSON
*/

var fs = require('fs');
var _dir = require('path').normalize(__dirname) + '/rom';

var readname = function(dir){
	var newDir = dir.replace('rom', 'lang').replace('.xml', '.json');
	// newDir = newDir.split('/lang/');
	// var tmpUrl = newDir[0] + '/lang/' + newDir[1].replace('/', '_').replace('.xml', '.json');
	// var tmpUrl = newDir[0] + '/lang/' + newDir[1].split('/')[0].replace('-', '_') + '.json';
	return newDir;
};

var changeArray = function(strings, callback){
	var array1 = strings.split('[');
	var newContents = strings;
	var upState = function(i){
		++i;
		if(i === array1.length) callback(newContents.replace(/\{\{/g, '{').replace(/\}\}/g, '}'));
	}
	if(array1[1]){
		array1.forEach(function(newArray, index){
			if(index > 0 && newArray != '') {
				var array2 = newArray.split(']');
				if(array2[0]){
					if(array2[0].indexOf('": "') > 0) {
						var newContent = '{' + array2[0] + '}';
						newContent = newContent.replace(/", "/g, '"}, {"');
						newContents = newContents.replace(array2[0], '{' + newContent + '}');
					}
				}
			}
			upState(index);
		});
	} else callback(newContents);
};

function getFiles(dir) {
	fs.readdir(dir, function(err, files){
		files.forEach(function(file, i){
			var name = dir + '/' + file;
			var fileName = file + '.json';
			if (fs.statSync(name).isDirectory()) {
				fs.mkdirSync(name.replace('rom', 'lang'));
				getFiles(name);
			} else {
				var data = fs.readFileSync(name);

				var newData = data.toString().replace('<?xml version="1.0" encoding="utf-8"?>', '');
				newData = newData.replace('<!--Generated by crowdin.net-->', '');
				newData = newData.replace('<resources>', '');
				newData = newData.replace('</resources>', '');
				newData = newData.replace(/<plurals name="/g, '"');
				newData = newData.replace(/<\/plurals>/g, '],');
				newData = newData.replace(/<item quantity="/g, '"');
				newData = newData.replace(/">\n/g, '": [');
				newData = newData.replace(/<string-array name="/g, '"');
				newData = newData.replace(/<\/string-array>/g, '],');
				newData = newData.replace(/<item>/g, '"');
				newData = newData.replace(/<\/item>/g, '",');
				newData = newData.replace(/<string name="/g, '"');
				newData = newData.replace(/">/g, '": "');
				newData = newData.replace(/<\/string>/g, '",').trim();
				newData = newData.replace(/<resources\/>/g, '').trim();
				newData = newData.replace(/    /g, '').trim();
				newData = newData.replace(/  /g, '').trim();
				newData = newData.replace(/",\n]/g, '"]').trim();
				newData = newData.replace(/,\n"/g, ', "').trim();
				newData = newData.replace(/\\'/g, '\'').trim();
				newData = changeArray(newData, function(data){
					if(data.trim() != ''){
						// console.log(readname(name));
						fs.writeFileSync(readname(name), data.trim(), {flag: 'a+'});
						// console.log('Save: ' + name);
					}
				});
			}
		});
	});
}

getFiles(_dir);